#!/bin/bash

# Check the number of command-line arguments
if [ \( "$#" -eq 0 \) ] ; then
	echo "usage: ${0} <file> [--silent]"
	exit 1
fi

if [ "$2" == "--silent" ] ; then
	SILENT="1"
	shift
fi

# source file
FILE=$1
# get rid of the first argument
shift


# name of the file with encoded enabledness
ENABLED_ENC_FILE=$(mktemp /tmp/fair.XXXXXXXXXXX)
# name of the file with encoded fairness
FAIR_ENC_FILE=$(mktemp /tmp/fair.XXXXXXXXXXX)


# enabledness encoder
ENABLED_ENCODER="fair/enabled_encode.py"
# fairness encoder
FAIR_ENCODER="fair/fair_encode.py"
# FAIR_ENCODER="fair/fair_encode.py -e binary -d discard"
# FAIR_ENCODER="fair/fair_encode.py -e binary -d keep"
# FAIR_ENCODER="fair/fair_encode.py -e unary -d keep"
# FAIR_ENCODER="fair/fair_encode.py -e unary -d discard"


OUTPUT_DIR="./output"

cd ${OUTPUT_DIR} && ./clean_dir && cd ..

# encode enablednes
if [ -z "${SILENT}" ] ; then
	${ENABLED_ENCODER} ${FILE} > ${ENABLED_ENC_FILE}
	rc=$?
else
	${ENABLED_ENCODER} ${FILE} > ${ENABLED_ENC_FILE} 2>/dev/null
	rc=$?
fi

if [[ $rc != 0 ]]; then
	echo "Error when encoding enabledness into the model"
	exit $rc
fi

# encode fairness
if [ -z "${SILENT}" ] ; then
	${FAIR_ENCODER} ${ENABLED_ENC_FILE} > ${FAIR_ENC_FILE}
	rc=$?
else
	${FAIR_ENCODER} ${ENABLED_ENC_FILE} > ${FAIR_ENC_FILE} 2>/dev/null
	rc=$?
fi

if [[ $rc != 0 ]]; then
	echo "Error when encoding fairness into the model"
	exit $rc
fi

# copy the outputs of the scripts
cp ${FILE} "${OUTPUT_DIR}/source.txt"
cp ${ENABLED_ENC_FILE} "${OUTPUT_DIR}/enabled_encoded.txt"
cp ${FAIR_ENC_FILE} "${OUTPUT_DIR}/fair_encoded.txt"

RUNCMD="./runFancy"

if [ -n "${SILENT}" ] ; then
	RUNCMD="${RUNCMD} --silent"
fi

# run the usual stuff
${RUNCMD} ${FAIR_ENC_FILE} $@ | tee ${OUTPUT_DIR}/output.log
