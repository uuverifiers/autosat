#!/bin/bash

TIMEOUT=5

# Check the number of command-line arguments
if [ \( "$#" -eq 0 \) ] ; then
	echo "usage: ${0} [--silent] [-t timeout] <file> [params]"
	echo "  --silent     Do not print diagnostic messages"
	echo "  -t timeout   Set the timeout (default: ${TIMEOUT} s; 0 = infinity)"
	exit 1
fi

while [[ $# -gt 0 ]] ; do
	case $1 in
		--silent)
		SILENT="1"
		;;
		-t|--timeout)
		TIMEOUT="$2"
		shift # past value
		;;
		*)    # other
		if [ -z "${SRC}" ] ; then
			SRC=${1}
		else
			echo "error: input file specified multiple times!"
			exit 1
		fi
		;;
	esac

	shift # past argument
done

if [ $(uname) = "Linux" ]; then
    pathCmd="readlink -f"
elif [ $(uname) = "Darwin" ]; then
    pathCmd="realpath"
    # pathCmd="stat -f %N"
else
    pathCmd="realpath"
fi

OUTPUT_DIR="./output"

LIVENESSBASE="`dirname $($pathCmd $0)`/../LivenessProver/"

# set the base directory for the main script
export BASEDIR="${LIVENESSBASE}"

if [ -z "${SILENT}" ] ; then
	# run in case the core verifier will not terminate
	cd ${OUTPUT_DIR} && ./alltosvg && cd ..
fi

echo "Running ../LivenessProver/slrp ${SRC}" >&2
# run the main script
if [ $TIMEOUT -eq 0 ] ; then   # no timeout
	# . ../LivenessProver/slrp
	../LivenessProver/slrp ${SRC}
	rc=$?
else
	timeout ${TIMEOUT} ../LivenessProver/slrp ${SRC}
	rc=$?
fi

if [ "$rc" -eq 124 ] ; then
	echo "TIMEOUT" >&2
elif [ "$rc" -ne 0 ] ; then
	echo "other error (errno = $rc)"
	exit 1
fi

if [ -z "${SILENT}" ] ; then
	cp ${SRC} "${OUTPUT_DIR}/slrp_input.txt"
	cd ${OUTPUT_DIR} && ./alltosvg && cd ..
fi
